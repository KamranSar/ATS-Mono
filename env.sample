#
## App-specific settings
#
NODE_ENV=development
#NODE_ENV=production
AUTH_DOMAIN=https://apidev.cdcr.ca.gov
DOC_HOST=testApiServer
APP_HOST=localhost
APP_PORT=8000
#
## Debugging settings
#
DEBUG=cdcr*,*feathersjs*,*feathers-permissions*,*feathers-sync*
#DEBUG=cdcr*,*feathersjs*,*feathers-permissions*,*feathers-sync*,feathers-distributed*
DEBUG_COLORS=true
DEBUG_HIDE_DATE=false
DEBUG_SHOW_HIDDEN=false
#
## JWT Authentication
JWT_SALT_SECRET=m4L65xpHaRavfc36c+vh26pdS6A=
#
## Oracle Docker Server
#
ORACLE_SVR_PORT=1521
ORACLE_GUI_PORT=5500
ORACLE_USER=system
ORACLE_PASSWORD=Oradoc_db1
ORACLE_CONNSTR=localhost:1521/ORCLPDB1.localdomain
#ORACLE_CONNSTR=localhost:1521:ORCLCDB
# for Docker compose or stack use:  ORACLE_CONNSTR=oracle  otherwise use: localhost
#
## Oracle CDCR Server
#
#ORACLE_SVR_PORT=1521
#ORACLE_GUI_PORT=5500
#ORACLE_USER=HR
#ORACLE_PASSWORD=hr
#ORACLE_CONNSTR=vcc1-scan.us2.ocm.s7094056.oraclecloudatcustomer.com:1521/testpdb.vcc
#
## MS SQL Docker Server
#
MSSQL_SVR=localhost
# for Docker compose or stack use:  MSSQL_SVR=mssql  otherwise use: localhost
MSSQL_PORT=1433
MSSQL_DB=master
MSSQL_USER=SA
MSSQL_PASSWORD=msSql2017@
#
## MS SQL CDCR Server
#
#MSSQL_SVR=cdcrServer
#MSSQL_PORT=1433
#MSSQL_DB=imts
#MSSQL_DOMAIN=cdcrDomainName
#MSSQL_USER=SA
#MSSQL_PASSWORD=msSql2017@
#
# POSTGRES Server
#cdcrServer
POSTGRESQL_SVR=localhost
# for Docker compose or stack use:  POSTGRESQL_SVR=postgres  otherwise use: localhost
POSTGRESQL_PORT=5432
POSTGRESQL_USERNAME=postgres
POSTGRESQL_POSTGRES_PASSWORD=postgres
POSTGRESQL_DATABASE=midtier
#
## Application Mongo Server
#
MONGO_SVR=localhost
# for Docker compose or stack use:  MONGO_SVR=mongodb  otherwise use: localhost
MONGO_PORT=27017
#
## MiddleTier Mongo Server
#
MTMONGO_SVR=localhost
# for Docker compose or stack use:  MTMONGO_SVR=mongodb  otherwise use: localhost
MTMONGO_PORT=27017
#
## MiddleTier mySQL Server
#
MYSQL_SVR=localhost
# for Docker compose or stack use:  MONGO_SVR=mysql  otherwise use: localhost
MYSQL_PORT=3306
#
# REDIS Settings
#
REDIS_SVR=localhost
REDIS_PORT=6379
# for Docker compose or stack use:  REDIS_SVR=redis  otherwise use: localhost
REDIS_SESSION_SECRET="o9i#q3#xNi!oqQc)kA!elNY5YIRW@+:A8fJ+C+Ec8f0S!7DW(PI+pLPH60Jhm##1"
ENABLE_REDIS_CACHE_LOGGER=true
DISABLE_REDIS_CACHE=true
#
# FEATHERS DISTRIBUTION CONFIGURATION
# ===================================
#COTE_LOG=true
BASE_PORT=10000
HIGHEST_PORT=65535
#PUBLICATION_DELAY=10000
#COMPONENT_DELAY=1000
COTE_DELAY=1000
